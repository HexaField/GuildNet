apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-demo
  labels:
    app: agent-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agent-demo
  template:
    metadata:
      labels:
        app: agent-demo
    spec:
      securityContext:
        runAsUser: 10001
        runAsNonRoot: true
      containers:
      - name: agent
        image: guildnet/agent:dev
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "8080"
        # OPTIONAL: set PASSWORD explicitly; else it will be generated and stored in /data
        #- name: PASSWORD
        #  valueFrom:
        #    secretKeyRef:
        #      name: agent-demo-secret
        #      key: PASSWORD
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: data
          mountPath: /data
        - name: workspace
          mountPath: /workspace
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: data
        emptyDir: {}
      - name: workspace
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: agent-demo
  labels:
    app: agent-demo
spec:
  selector:
    app: agent-demo
  ports:
  - name: http
    port: 8080
    targetPort: http
