apiVersion: v1
kind: Service
metadata:
  name: rethinkdb
  labels:
    app: rethinkdb
spec:
  type: LoadBalancer
  ports:
    - name: client
      port: 28015
      targetPort: 28015
  selector:
    app: rethinkdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rethinkdb
  labels:
    app: rethinkdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rethinkdb
  template:
    metadata:
      labels:
        app: rethinkdb
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1000
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: rethinkdb
          image: rethinkdb:2.4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 28015
              name: client
            - containerPort: 29015
              name: cluster
            - containerPort: 8080
              name: admin
          args: ["rethinkdb", "--bind", "all"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsUser: 1000
            runAsGroup: 1000
          readinessProbe:
            exec:
              command: ["/bin/bash", "-lc", "</dev/tcp/127.0.0.1/28015"]
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["/bin/bash", "-lc", "</dev/tcp/127.0.0.1/28015"]
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          emptyDir: {}
