version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: hdyzoa.tfxv60cmmk2l870j # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFRSEdSN0l5SUdxcWxPZHNCd3N5M1dNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5URXdNRGt3TXpBNU5UVmFGdzB6TlRFd01EY3dNekE1TlRWYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBQ0VXN0ZxRm5PTmFBOXBCc0w4NDVRQkQrQmFWbFp5Ylo1d2ZsClkyZzRUMGVqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVcno3UWlFNG0zZXJpR2pBcQpHSGd3b0NKMDRFZ3dCUVlESzJWd0EwRUFMNWNnamhwVlFMT3djT3J3V08yWXZmYlhJU2hHTy9PUlpaZVRWV0hQCktORWZNTjd0Y21PdTBENG1adE5RVTgxU2dRZnJjRUlhWFpwRk5iQ2xkZVhNREE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQzZGMitlZno4NFJXTEhNTXRZSGdNZ3J1Mng3Z2ZLbUhUbS9CZTdHWGxSbwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.34.0 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.

    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.

    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.

    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface

    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true

    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

    #       # # Wireguard specific configuration.

    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24

    #       # # Virtual (shared) IP address configuration.

    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1

    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com

    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld

    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.

    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.11.1 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Override (patch) settings in the default OCI runtime spec for CRI containers.

    # # override default open file limit
    # baseRuntimeSpecOverrides:
    #     process:
    #         rlimits:
    #             - hard: 1024
    #               soft: 1024
    #               type: RLIMIT_NOFILE

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: 7Fop6YCvzwtEHmXEOHsKnMYuhNNFUKf9Ug3earmm9iQ= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: bXOKsn8ILjRtDlbhjXD8JXYz+91Qd7aaur2h0kuYe+k= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://10.66.0.2:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: guildnet # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: 3vpj3b.9xz2gwms0vqudo1s # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: RbpM/0KOw5dJRWq9pK3ZPllZEdE0hRtVF0Rvib5Xmrs= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVMrZ0F3SUJBZ0lRWlpRVFN1YWpWZ2J4MGF1cUtzQnpKekFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNVEF3T1RBek1EazFOVm9YRFRNMU1UQXdOekF6TURrMQpOVm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSGpYSTd3ZlFCQTZUSDNVem9nZDJRdzROTWhiZzZ0cDBJVjUwdzhyL1NRYW9IZDQrNFZWYjhIbHh2bEQKS0VCR0RZMHdmZUY5SThSSjhvN1ozakFRRk9PallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVxM0Q0L1V4YUMyaTV3dkNGU05JWXRDTTl2Nk13Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUlrcm5yL3MKWjBqMTlWK29na0VKSWQwclB3UkxjOGZGTG4xSEFGUy9DT0YxQWlFQTlsdG1GMnUvYlRCdUhncEN6aW04NVNKQgp4WWN6NjlqWlNyRnZKYjdwMUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUpiSzVOeVRUZnpQRnV5YW9hZUhibWZOYlFsaG1RV1g5UDRTdWpBMUJGYjRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZU5janZCOUFFRHBNZmRUT2lCM1pERGcweUZ1RHEyblFoWG5URHl2OUpCcWdkM2o3aFZWdgp3ZVhHK1VNb1FFWU5qVEI5NFgwanhFbnlqdG5lTUJBVTR3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYmptYk9FN2VVeXp3cjZ5amxLY1BqREFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJMU1UQXdPVEF6TURrMU5Wb1hEVE0xTVRBd056QXpNRGsxTlZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCQWpmRm11bFJaaml0cktaZU04Vkp6M3N2ajVvV04rNzMwUWI0d2MrNDdKOW9wa2RNTUtQCktseHk3M0RwWGVrZ0F1c2dpSlN5TEIyVnZlR0J5VlJEZEpXallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVKblJUclB0THdYMEEyS3NyeUVaaHZEOFFsNVV3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFMYVJ1Qnp4QjQ4MVdwMk5DTWU1cUloSUJhWmdDZU5zak01VllIZkdJNG1IQWlBdTVxQjV1TzlrNVFVR09jSmwKck5CWE8vbW1GT3RDS0FHOWxoZll6cG4vM2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZEbUF1dmJOcE1HNXIrYWZMdWpncjFaS2F6Mmx2R01aQXZCemFCTlBZdUNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQ044V2E2VkZtT0syc3BsNHp4VW5QZXkrUG1oWTM3dmZSQnZqQno3anNuMmltUjB3d284cQpYSEx2Y09sZDZTQUM2eUNJbExJc0haVzk0WUhKVkVOMGxRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeU0vMS9rVE5yN3BnZGVqL0U2d2NGdDBoRzRxYUxUZEJmb0JkQkdCcjRvZit6QUlICncvOGxrbFUrOENzRE9rc3dZdnRzVyt3d1orWWhHKy8yWkxncUVWVFlpa0VNZ3BKcExmaXMxblR0d2szeU5wTloKWDRCcnhDV2x0bzFHUlZzMEJ1d1NkQ1l2dXYwbFNwVGNzTnBTUzJoRHFFb3B2anZCTzJSS1h1U2xEaGgyUXF5ZQp2SS9KSkRDVmFyM25OZ1Z3allJWDBvQVFRMjRNT3l2ZXd1OTBKcmpUSFJKdmxMRUxPNE5jYUNMM1VVMEhlclo5Ck8vaFlYRVc5eHh2WXdQZng0VUE1aUx3TTJTKy9IS3RLbGx0dG1oeUwycTFaeWR6QXpneWJWdm54cjVOV0ZJejcKTXhiQnJocWNEdUJRbGgvS1BkTTk4aWFVNUhiVHltbnAyTHQ0czNacTRWQlJ4WnFDKzY0bnY4UTNuQzlad0g0eQprL3I4dTA2RGo4MFhCa1BjSmlvaWFkZTY4Sm02YnA5aVUwWjFyQUVlQzdpY0pIbFBhdVVhRVFtQTltbHpOYnNmCjZySDk5OXJQc0VaYjk4K0pKbDc3U2RVT1plc05wR1V6amVCK21pWXdIeEhzek5KMTlaSXpremhxNXI1OUhoanMKMlFlejhScVRpWUlqQVlrYW1BWVZwS282R21WeW5LZnVIaTBlZ2ljS0RRN2VhNnlRZzdxMmJaRVlaYmswSFNKbgo3V01iQUsveHNIeVNaRzl6NVZJVnQvVmJVUkJjcXpJUXMzRU5GbmJVb0JaQ21vVW9hVCtXRmxLcXBwcUwvak5ZCjBya0JLMDY3ZlJCenRSTkZEYUUyaS9laGNQNHlLWDZhNTNXMko2cGdBSmJlREhuTGJkMm13MHhPUW0wQ0F3RUEKQVFLQ0FnQUJMVGJEeHFOdDVDbXNoekQzYklxOWw0NGFHelhNRGdiVU51eFVtandIbDhSbWJaeWVDV0N1K3REagpsMXp0ZW9OT0VTc1JYdERweXU5bXVvRTNGZDBwUE5ZSCtWbVpha0l6Z3NHQWdDN2tkSkIyd1daRXFQdjRxai9PClVnV1hZbkZybVBhQ3Q3YVA0ZXZXQkFsSEFBQjdjS0QwMjNwakl2Wis0cGVNOXNvQXl5UG1RQnl0L2ltdmpKbFQKaHNsVUI3UWhJQ0lEbWJ4K3FLWnBzbGdiekV0aDdyTk4rRTJ2RVZwL2ZzV0wxcWljVVZjNTROZmJBaG1DY09Zcgp4SDRBbzNOSFhwajN0Q0pmSTJoN1FvV3RXOXZJaTJKR1piMmc4U293Q3VMZUg1aks3cElTak1Ec0M3WVd6eEViCkJUVnpxN3dEb0xrOE1mMnRXUVRrcXJvMEN1VXFKVnVvY000WUtRTmNiTUxaaFdtVllReUlUdUxYQVNPYVJDcVAKQ0MyVlJ0RHlJNFV6VUdDSWVOM0NYalhTZ2pNRVA5UktzblJ3Q2MzdjlzS3F0WHdrdnBWcFJzWjdaV1JOVnl1UgplWkJsVmRobEE1dUFDYlpFd21XQ2tHOGdEd1NxTWNZbjVaRi9lc0JLcnQzMjlBL3RmR0t5L2NKdXBCUVA5QURXCmw3Q2J1R3MyaC9IK1E0K0FIU3NkVnBxYkxyWHdwYWkyTWFIeXFtcDdxeW41UlMzYVBLNm03cmxkVWwwd1RKR1gKVGJZRG1MazkwbzRxVGJESFFXTmF4Z3I3d2ZJK2RneDdUY2lKTktLSkJQTzhMOGxzT1RIOCtkTy9mSjMrQ01hTgpsM3VOTktXcm0rS3oyemVmMW9JVVR4Q1FwTXkwU1FUWFkwOFcxeDkyODdGM0ExNVFBUUtDQVFFQXpJSmFCT0dwCjA0YU5IRFVtakFpYk1ZQWhVMWtQVStxUEE4NjhxNE1pMmdIVDdRQTRJOCtwOThpaUIzQmJRTEQ1cDBtK0xaMWgKUnZ6M1plWnJPbHd1R1dsL2lMakVyeWkvdnNJMnJFWGxpNXAyRGJJQU45K0Uvb1hyTHhLbno2bnNweGxKVmRaWgp2cVJjWFByek4xeENyenJkLzdjVGdia003MHFxQWxzU251Sy91TjN6MVdWMktpTG4vdHRCVlFFeUFuaSsxeFBkCmhVWXh6dWpoWUI5azBvZFExb29XTjNhS2tyVFkxZTJnSWZhcnNRTXgxOE1PM3pDVmwxY0FrbE5xSWQydlI3MTYKMTE5L0RldmlYNkV3UzJ1UHV3bzNpS2cxYTkzNmV4cDkxU1NXWGM5aEhMdzN5cFdMSjJ6S1FIU1BFWmJNYjA3SQpYSDNreGJBRUhhTzk5UUtDQVFFQSsxOVVVYjkzQ2ZqT2ZSa1R0aDBra2VpM2poV1hWVlU4Y2lnR285V1YwRjhFCm1EMmpVVnExc3gra25TYlNyTUJseVhmenRqMFpzNnZ3WFhLckNwTkwwKzhqWitXemJiTmx5M0pnMk5iT0dzZHkKKzV3d3prL2wwRm0vNmxYblRhNkpOREJqUUgzQVBxTlBHaDlwVWMyYjJjMVZJRUxXaEMySmRXeDUwRkJUa0VNMgpNak9OSVB6YnlTaXpnOGNCVExNVEU2bG5VbDBGNlREdUtBcVhiRGxraTJwallRQjZCS0t2bS9wQ3lHNlB6NWpjCmJtbnppNHBMYWhsUFZ1TXFRQTY4SXdDMG9Vc2hrSi9QM243Rzcwd2ZPdnhSUW4yNjhnY3hYODZaT2V0c2NZcjIKT2R5c1BlaUZIUUFTNlVPa1RGdUtIVjVFRGVoLytSbDhVbHBHb0hMdm1RS0NBUUVBanpOUFdVK3luUDBBWGhvUgpqY2lROHc1blIzZDdOaVZ1VXhvMkhsckswcUNwQnJFNm5ralJHVUlSd3VlMzNncU9KY2VMTldHWU5oNzRGUkJOClVTWXUyWGgzNXdLS0pxUi83MUVLKzRKT0EzejY0UWdkQXdLdW01S21aZVhJUDY4YW1MOHFETUwxUUhyU2VnRDIKd1hNRzlyQmZ0cWs1TFlLb1BmNm9JTklvcmJ6VXh0d1QydjhheU5KOFpJYWVycWtSblkxekJDTlMzL21ROHZNNgpyUllPZ1NSalJIYVlxK21EaXNxN2NzRGJlaXpCZUVkbVpWQ2VYMFlqMlQ4QWxYVjNRWk43SXQ3WTMycHRDeEI3CkNMOVRrOXdUWHNMK3MrQWsyQTB0VVhueFZvZ3lDaW9tTS9yUGpqazhvVFNhUXB2YmVsTi9md2xKWHdxQVlMU3AKalIrVTZRS0NBUUFxcnEwcWxGQXFLVTBtZ0xPUUlMS3M4ODczR1VOeEFlQVpvaUkrZjIzSXk5bUQ0RE56Qk93RgpWa0lsVFFwSXV3S05pd2llMFJFa0tQWFBhRUVTc3FBVmhHMkduc0l3eGwxcWhpbGJxRjJtdm1jUHdoMm5hbm1qClB4b1BPRGJtUWRTYVAvMGFYai9lWXV4eml4SGZDZ0tFb1JEclFXNGJVNEFicUNlbTczekE2aWl4clg4eE1yNC8KRWVJcFpna2FkTzJ3VVB0eVNNbFFKemJKSmNOQVpSNWxiZE1pRFdxcWp0VXlydlBZQkszMm1nWVQyWG01SCtwZQpRWjN2S3ZOcG5SYmsrcUd4SVlpNWZlbFY1a0R4TVFPOGlFdGo5dVZmWTBsRzgxV2hPQkJaMXphbjdJaHltcUMvCm85dVNNQ0lkdFExbW56TC9DWk54UUpxVGdUQ3MzZGRCQW9JQkFCY0lUOEkvL3VoQTVDT2VPbG1lckt3dWtJWVYKSk1wSUZoczU4NjMzUjhMWGlDWHBVVG8yMDFzYzJPODdnQVRwL1QrNGc0ZzFOcWZwdnFkdGZ6c1JCMEF6RzY4egpPVzJWSjgrS0pWU3cxMWxudnNEMDRjSUxsZ2MrZ0RpSjYxbFFHRG9HZm5lRk5hT3kwL0VPQnR3YTBveUhmK0FMCmtDTEE1M0pDYzRwcktDUDRYZ0FRQ0NRMmNRMXBFVGpVMVJRTkNjRkx0QmRDQ0pieXlLSjBSZWtycFpUNkw0Q0EKZEw0UG92TWw5UFozeEJPYTRNWW1CcitTbVFLUjN2cjhMTGZWcHVPMCszWitpNnZpSE1pUmdxdnJxOHVWTCtxOQplR2J2bGgzci9UNE4yVjFpeFhJNGFtSGxmSTByN2ltOXp1djUrakJqelV4WVRHejY5K2UyY3BQb0NYdz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.34.0 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 10.66.0.2
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
        
        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
        # authorizationConfig:
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: webhook # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: Deny
        #         matchConditionSubjectAccessReviewVersion: v1
        #         matchConditions:
        #             - expression: has(request.resourceAttributes)
        #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: in-cluster-authorizer # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: NoOpinion
        #         matchConditionSubjectAccessReviewVersion: v1
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.34.0 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.34.0 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.34.0 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRYlhCNGkzWmpJSHRSQTRtVWcreU5TREFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkxTVRBd09UQXpNRGsxTlZvWERUTTFNVEF3TnpBek1EazFOVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQk9CYVcrUGxKYzlZCmVZQUFpRHYrZEJyUE9hbWlEZFBPTkl3M1NJRGtmZnRqUHZzeW4zQTJrZDhoSTFFSTdRTU82Z2pUdVBWUzluSlMKZmNET0wrcnZiSUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVem9wSlcyTklrVUJqClpiZnJPRHJiM3ZWT3ZyWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBT2diSDVFYldMY3c2QnU0b0t4V2xGY00KVVFwMFB1WGlxdSs4YXk0VmpFVC9BaUJkb3ZXbml3bEtnSkU4S2Y1T3J6R0w1L2xDTlRoOXpzYXI2QmJOc2xpawpSZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5SWHlJcHZyckkzN3ZhNE9zWlhmV21FNXFidEREVlR1VmpEKzFFMXhmZ29vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNEZwYjQrVWx6MWg1Z0FDSU8vNTBHczg1cWFJTjA4NDBqRGRJZ09SOSsyTSsrektmY0RhUgozeUVqVVFqdEF3N3FDTk80OVZMMmNsSjl3TTR2NnU5c2dRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.6.4

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.12.3 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

    # # Allows running workload on control-plane nodes.
    # allowSchedulingOnControlPlanes: true
